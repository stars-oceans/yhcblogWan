import{_ as e,c as a,o as s,V as i}from"./chunks/framework.WW8f2_VW.js";const g=JSON.parse('{"title":"如何解决Vue无法显示网络图片的问题","description":"如何解决Vue无法显示网络图片的问题","frontmatter":{"post":true,"title":"如何解决Vue无法显示网络图片的问题","date":"2024-12-05T00:00:00.000Z","cover":"https://img.tukuppt.com/png_preview/00/25/11/mbKCegbn9L.jpg!/fw/780","coveross":"https://img.tukuppt.com/png_preview/00/25/11/mbKCegbn9L.jpg!/fw/780","categories":["BUG"],"tags":["如何解决Vue无法显示网络图片的问题"],"description":"如何解决Vue无法显示网络图片的问题"},"headers":[],"relativePath":"posts/2024/12/如何解决Vue无法显示网络图片的问题.md","filePath":"posts/2024/12/如何解决Vue无法显示网络图片的问题.md"}'),t={name:"posts/2024/12/如何解决Vue无法显示网络图片的问题.md"},r=i(`<h2 id="缘由" tabindex="-1">缘由 <a class="header-anchor" href="#缘由" aria-label="Permalink to &quot;缘由&quot;">​</a></h2><h4 id="因为项目需求-项目中引用了图片的网络链接-但是发现了很奇怪的问题-图片链接如果在浏览器的地址栏中可以直接打开-如果在前端项目-vue-中-的img标签中却无法被渲染-但是在普通的-html-中可以正常显示。" tabindex="-1">因为项目需求，项目中引用了图片的网络链接，但是发现了很奇怪的问题，图片链接如果在浏览器的地址栏中可以直接打开，如果在前端项目 Vue 中 的Img标签中却无法被渲染，但是在普通的 HTML 中可以正常显示。 <a class="header-anchor" href="#因为项目需求-项目中引用了图片的网络链接-但是发现了很奇怪的问题-图片链接如果在浏览器的地址栏中可以直接打开-如果在前端项目-vue-中-的img标签中却无法被渲染-但是在普通的-html-中可以正常显示。" aria-label="Permalink to &quot;因为项目需求，项目中引用了图片的网络链接，但是发现了很奇怪的问题，图片链接如果在浏览器的地址栏中可以直接打开，如果在前端项目 Vue 中 的Img标签中却无法被渲染，但是在普通的 HTML 中可以正常显示。&quot;">​</a></h4><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><h4 id="在vue项目中的头部添加meta标签" tabindex="-1">在vue项目中的头部添加meta标签 <a class="header-anchor" href="#在vue项目中的头部添加meta标签" aria-label="Permalink to &quot;在vue项目中的头部添加meta标签&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 在index.html中添加： --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;referrer&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-referrer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 或者在img标签中添加： --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> referrerpolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-referrer&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h1 id="referrer是什么" tabindex="-1">Referrer是什么？ <a class="header-anchor" href="#referrer是什么" aria-label="Permalink to &quot;Referrer是什么？&quot;">​</a></h1><ul><li>Referer是http请求header的一部分，当浏览器向Web服务器发送请求的时候，请求头信息一般包含referer。该属性的作用就是告诉服务器这个链接是从哪个页面链接过来的，服务器就可以基于此信息进行处理。</li></ul><h1 id="referre作用" tabindex="-1">Referre作用 <a class="header-anchor" href="#referre作用" aria-label="Permalink to &quot;Referre作用&quot;">​</a></h1><ul><li>防盗链：顾名思义就是防止别人复制链接盗取资源，原理就是，服务器再接受访问静态资源的请求时，会判断Referer值是否是自己的网站地址。</li><li>防止恶意请求：比如静态请求是.html结尾的，动态请求是.shtml，那么所有的*.shtml请求，必须 Referer为我自己的网站才可以访问，这就是Referer的作用。</li></ul><h1 id="防盗链的两种方式" tabindex="-1">防盗链的两种方式 <a class="header-anchor" href="#防盗链的两种方式" aria-label="Permalink to &quot;防盗链的两种方式&quot;">​</a></h1><ul><li>允许空Referrer：允许Referer为空，意味着你允许比如浏览器直接访问，就是空。</li><li>不允许空Referer：意味着，发送请求必须携带referrer属性。</li></ul>`,11),l=[r];function h(n,p,o,k,d,u){return s(),a("div",null,l)}const m=e(t,[["render",h]]);export{g as __pageData,m as default};
