import{_ as e,c as s,o as t,V as a}from"./chunks/framework.WW8f2_VW.js";const V=JSON.parse('{"title":"Vue2 Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除","description":"Vue2 Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除","frontmatter":{"post":true,"title":"Vue2 Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除","date":"2024-01-26T00:00:00.000Z","cover":"https://i.postimg.cc/MK2tgDK7/intro-to-vue-js.png","coveross":"https://i.postimg.cc/MK2tgDK7/intro-to-vue-js.png","categories":["Vue"],"tags":["Vue2"],"description":"Vue2 Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除"},"headers":[],"relativePath":"posts/2024/01/14.Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除.md","filePath":"posts/2024/01/14.Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除.md"}'),n={name:"posts/2024/01/14.Vue.set()和this.$set()介绍 为解决Vue2受 ES5 的限制，Vue2 不能检测到对象属性的添加或删除.md"},u=a(`<h1 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h1><h1 id="vue-set-和this-set-介绍" tabindex="-1">Vue.set()和this.$set()介绍 <a class="header-anchor" href="#vue-set-和this-set-介绍" aria-label="Permalink to &quot;Vue.set()和this.$set()介绍&quot;">​</a></h1><h3 id="在我们使用vue进行开发的过程中-可能会遇到一种情况-当生成vue实例后-当再次给数据赋值时-有时候并不会自动更新到视图上去-当我们去看vue文档的时候-会发现有这么一句话-如果在实例创建之后添加新的属性到实例上-它不会触发视图更新。-如下代码-给-student对象新增-age-属性" tabindex="-1">在我们使用vue进行开发的过程中，可能会遇到一种情况：当生成vue实例后，当再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。 如下代码，给 student对象新增 age 属性 <a class="header-anchor" href="#在我们使用vue进行开发的过程中-可能会遇到一种情况-当生成vue实例后-当再次给数据赋值时-有时候并不会自动更新到视图上去-当我们去看vue文档的时候-会发现有这么一句话-如果在实例创建之后添加新的属性到实例上-它不会触发视图更新。-如下代码-给-student对象新增-age-属性" aria-label="Permalink to &quot;在我们使用vue进行开发的过程中，可能会遇到一种情况：当生成vue实例后，当再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。 如下代码，给 student对象新增 age 属性&quot;">​</a></h3><div class="language-vue.js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue.js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data () {</span></span>
<span class="line"><span>  return {</span></span>
<span class="line"><span>    student: {</span></span>
<span class="line"><span>      name: &#39;&#39;,</span></span>
<span class="line"><span>      sex: &#39;&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>mounted () { // ——钩子函数，实例挂载之后</span></span>
<span class="line"><span>  this.student.age = 24</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="受-es5-的限制-vue-js-不能检测到对象属性的添加或删除。因为-vue-js-在初始化实例时将属性转为-getter-setter-所以属性必须在-data-对象上才能让-vue-js-转换它-才能让它是响应的。" tabindex="-1">受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的。 <a class="header-anchor" href="#受-es5-的限制-vue-js-不能检测到对象属性的添加或删除。因为-vue-js-在初始化实例时将属性转为-getter-setter-所以属性必须在-data-对象上才能让-vue-js-转换它-才能让它是响应的。" aria-label="Permalink to &quot;受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的。&quot;">​</a></h3><blockquote><p>正确写法：this.$set(this.data,”key”,value&#39;)</p></blockquote><div class="language-vue.js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue.js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mounted () {</span></span>
<span class="line"><span>  this.$set(this.student,&quot;age&quot;, 24)</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,7),p=[u];function i(o,l,c,_,r,h){return t(),s("div",null,p)}const v=e(n,[["render",i]]);export{V as __pageData,v as default};
